spring.application.name=itech-service

#service port
server.port=8443
#最大连接数
server.tomcat.max-connections=10000
#最小线程数设置
server.tomcat.threads.min-spare=10
#最大线程数设置
server.tomcat.threads.max=200
#编码方式
server.tomcat.uri-encoding=utf-8


#ssl
#keytool -genkey -v -alias app-core -keyalg RSA -validity 7300 -keystore  D:/app-core.keystore
#server.ssl.key-store=classpath:app-core.keystore
#server.ssl.key-store-password=123456
#server.ssl.key-password=123456
#server.ssl.keyAlias=app-core
#server.ssl.enabled=true
#server.ssl.protocol=TLSv1.2

#jks
#server.ssl.key-store=classpath:keystore.jks
#server.ssl.key-store-password=Paic1234
#server.ssl.key-password=Paic1234
#server.ssl.key-store-type=JKS
#server.ssl.keyAlias=techmask
#server.ssl.enabled=true
#server.ssl.protocol=TLSv1.2



##master db config begin
#mysql configuration
spring.datasource.druid.master.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.master.url= jdbc:mysql://localhost:3306/itech?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.druid.master.username=testsa
spring.datasource.druid.master.password=123456

#druid configuration
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.druid.master.name=MyDB
# 初始化大小，最小，最大
spring.datasource.druid.master.initial-size=5
spring.datasource.druid.master.min-idle=1
spring.datasource.druid.master.max-active=50
# 配置获取连接等待超时的时间
spring.datasource.druid.master.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.master.time-between-eviction-runs-millis=60000
# 配置一个连接在池中的最小生存时间，单位是毫秒
spring.datasource.druid.master.min-evictable-idle-time-millis=300000
spring.datasource.druid.master.validation-query=SELECT 1
spring.datasource.druid.master.test-while-idle=true
spring.datasource.druid.master.test-on-borrow=false
spring.datasource.druid.master.test-on-return=false
#spring.datasource.druid.master.fail-fast=true
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.master.pool-prepared-statements=false
spring.datasource.druid.master.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
spring.datasource.druid.master.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.master.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.master.use-global-data-source-stat=true
##master db config end


##slave db config begin
#mysql configuration
spring.datasource.druid.slave.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.druid.slave.url= jdbc:mysql://106.14.202.126:3306/itech?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=Asia/Shanghai
spring.datasource.druid.slave.username=dev
spring.datasource.druid.slave.password=123456

#druid configuration
# 下面为连接池的补充设置，应用到上面所有数据源中
spring.datasource.druid.slave.name=MyDB
# 初始化大小，最小，最大
spring.datasource.druid.slave.initial-size=5
spring.datasource.druid.slave.min-idle=1
spring.datasource.druid.slave.max-active=50
# 配置获取连接等待超时的时间
spring.datasource.druid.slave.max-wait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.slave.time-between-eviction-runs-millis=60000
# 配置一个连接在池中的最小生存时间，单位是毫秒
spring.datasource.druid.slave.min-evictable-idle-time-millis=300000
spring.datasource.druid.slave.validation-query=SELECT 1
spring.datasource.druid.slave.test-while-idle=true
spring.datasource.druid.slave.test-on-borrow=false
spring.datasource.druid.slave.test-on-return=false
#spring.datasource.druid.slave.fail-fast=true
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.slave.pool-prepared-statements=false
spring.datasource.druid.slave.max-pool-prepared-statement-per-connection-size=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
#spring.datasource.filters=stat,wall,log4j
spring.datasource.druid.slave.filters=stat,wall
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.druid.slave.connection-properties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.druid.slave.use-global-data-source-stat=true
##slave db config end



#mybatis 配置
mybatis.mapper-locations=classpath*:mappers/**/*.xml


#pagehelper分页插件配置
pagehelper.helperDialect=mysql
#pagehelper.helperDialect=sqlserver
pagehelper.reasonable=true
pagehelper.supportMethodsArguments=true
pagehelper.params=count=countSql


#security
spring.security.basic.enabled=false
spring.security.ignored=/api/**
spring.security.user.name=admin
spring.security.user.password=123456


# format json date
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8



## MULTIPART (MultipartProperties)
# 开启 multipart 上传功能
spring.servlet.multipart.enabled=true
#文件大小阈值，当大于这个阈值时将写入到磁盘，否则在内存中。默认值为0
spring.servlet.multipart.file-size-threshold=0KB
# 最大文件大小
spring.servlet.multipart.max-file-size=100MB
# 最大请求大小
spring.servlet.multipart.max-request-size=100MB


## 文件存储所需参数
# 所有通过 REST APIs 上传的文件都将存储在此目录下
file.upload-path=../files


##jwt config
#header名
jwt.token.header=Authorization
#token私钥
jwt.token.secret=System Token
#签发者
jwt.token.issuer=System Administrator
#主题
jwt.token.subject=System Administrator
#token过期时间,毫秒
jwt.token.expiration=3600000